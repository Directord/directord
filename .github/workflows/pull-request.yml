name: Run pull-request workflow
on: [pull_request]
jobs:
  auto_blacken:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: If needed, commit black changes to the pull request
        run: |
          if ! tox -e black-check; then
            tox -e black-format
            git config --global user.name '${{ github.event.pull_request.user.login }}'
            git config --global user.email '${{ github.event.pull_request.user.login }}@users.noreply.github.com'
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git commit -am "FIX: Auto format Python code with Black"
            git push
          fi

  container_build_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build new directord container
      run: docker build -t directord -f Containerfile .

  functional_defaults_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests.yaml \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-test-logs
          path: /tmp/directord-*.log

  functional_messaging_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo DRIVER=messaging bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Setup SSL encryption for Qpid
        run: sudo tools/scripts/messaging/messaging-ssl-setup.sh
      - name: Configure messaging_address
        run: |
          sudo /opt/directord/bin/python <<EOC
          import socket
          import yaml
          try:
              with open('/etc/directord/config.yaml') as f:
                  config = yaml.safe_load(f)
          except FileNotFoundError:
              config = dict()
          config["messaging_address"] = socket.gethostname()
          with open('/etc/directord/config.yaml', 'w') as f:
              f.write(yaml.safe_dump(config, default_flow_style=False))
          EOC
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests.yaml \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo mkdir -p /tmp/directord
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log || true
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log || true
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log || true
          sudo cp /etc/directord/messaging/ssl/directord* /tmp/directord
          sudo cp /usr/local/share/ca-certificates/directord/* /tmp/directord
          sudo cp /etc/qpid-dispatch/qdrouterd.* /tmp/directord
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-test-logs
          path: /tmp/directord*

  functional_memory_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Configure memory backend
        run: >-
          echo 'datastore: memory' | sudo tee -a /etc/directord/config.yaml
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests.yaml \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-memory-test-logs
          path: /tmp/directord-*.log

  functional_redis_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Install Redis
        run: sudo apt install -y redis
      - name: Start Redis
        run: sudo systemctl restart redis
      - name: Configure redis backend
        run: >-
          echo 'datastore: redis://127.0.0.1:6379/2' | sudo tee -a /etc/directord/config.yaml
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests.yaml \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-redis-test-logs
          path: /tmp/directord-*.log

  functional_defaults_query_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests-query.yaml \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-query-test-logs
          path: /tmp/directord-*.log

  functional_defaults_queuesentinel_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo /opt/directord/bin/directord orchestrate functional-tests-queue-sentinel.yaml
          sudo timeout 240 /opt/directord/bin/directord exec --verb QUEUESENTINEL true \
                                                             --poll \
                                                             --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-queuesentinel-test-logs
          path: /tmp/directord-*.log

  functional_defaults_async_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute async-functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests-async.yaml \
                                              --poll \
                                              --check
      - name: Execute functional async-race-condition check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests-async-race.yaml \
                                              --poll \
                                              --check
      - name: Execute functional async-time check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 40 /opt/directord/bin/directord \
                                             orchestrate \
                                             functional-tests-async-time.yaml \
                                             --poll \
                                             --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-async-test-logs
          path: /tmp/directord-*.log

  functional_messaging_async_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo DRIVER=messaging bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Setup SSL encryption for Qpid
        run: sudo tools/scripts/messaging/messaging-ssl-setup.sh
      - name: Configure messaging_address
        run: |
          sudo /opt/directord/bin/python <<EOC
          import socket
          import yaml
          try:
              with open('/etc/directord/config.yaml') as f:
                  config = yaml.safe_load(f)
          except FileNotFoundError:
              config = dict()
          config["messaging_address"] = socket.gethostname()
          with open('/etc/directord/config.yaml', 'w') as f:
              f.write(yaml.safe_dump(config, default_flow_style=False))
          EOC
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute async-functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests-async.yaml \
                                              --poll \
                                              --check
      - name: Execute functional async-race-condition check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests-async-race.yaml \
                                              --poll \
                                              --check
      - name: Execute functional async-time check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 40 /opt/directord/bin/directord \
                                             orchestrate \
                                             functional-tests-async-time.yaml \
                                             --poll \
                                             --check
      - name: Generate log details
        run: |
          sudo mkdir -p /tmp/directord
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log || true
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log || true
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log || true
          sudo cp /etc/directord/messaging/ssl/directord* /tmp/directord
          sudo cp /usr/local/share/ca-certificates/directord/* /tmp/directord
          sudo cp /etc/qpid-dispatch/qdrouterd.* /tmp/directord
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-async-test-logs
          path: /tmp/directord*

  functional_defaults_add_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              functional-tests-async-transfer.yaml \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-add-test-logs
          path: /tmp/directord-*.log

  functional_bootstrap_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Ensure ssh is installed
        run: sudo apt update; sudo apt -y install openssh-server
      - name: Check config
        run: |
          cat > sshd_config <<EOF
            SyslogFacility AUTHPRIV
            PermitRootLogin yes
            AuthorizedKeysFile	.ssh/authorized_keys
            PasswordAuthentication yes
            ChallengeResponseAuthentication no
            UsePAM yes
            UseDNS no
            X11Forwarding no
            PrintMotd no
            AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
            AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
            AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
            AcceptEnv XMODIFIERS
            Subsystem sftp internal-sftp
          EOF
          sudo mv sshd_config /etc/ssh/sshd_config
          sudo systemctl restart ssh
      - name: Create ssh key
        run: >
          ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa
      - name: Add key to auth file
        run: >
          cat ~/.ssh/id_rsa.pub | tee -a ~/.ssh/authorized_keys
      - name: Ensure the owner of the key is correct
        run: |
          chmod 600 ~/.ssh/authorized_keys
          chmod 700 ~/.ssh
          sudo chmod -c 0755 ~/
          ls -la ~/.ssh
      - name: Test SSH connection to localhost
        run: >
          ssh -vvv -i ~/.ssh/id_rsa -o BatchMode=yes -o StrictHostKeyChecking=no $(whoami)@localhost
      - name: Run bootstrap test
        run: |
          /opt/directord/bin/directord --debug \
                                       bootstrap \
                                       --catalog tools/directord-inventory-catalog.yaml \
                                       --catalog tests/directord-test-catalog.yaml \
                                       --key-file ~/.ssh/id_rsa &> /tmp/directord-bootstrap-failure.log
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-bootstrap-test-logs
          path: /tmp/directord-*.log

  functional_defaults_realworld_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Run install
        run: sudo bash tools/dev-setup.sh /opt/directord python3 ${{ github.workspace }}
      - name: Run server service install
        run: |
          sudo /opt/directord/bin/directord-server-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-server
      - name: Run client service install
        run: |
          sudo /opt/directord/bin/directord-client-systemd
          sudo systemctl daemon-reload
          sudo systemctl restart directord-client
      - name: Wait for client online
        run: |
          timeout 120 bash -c 'while ! sudo /opt/directord/bin/directord manage --list-nodes; do sleep 1; done'
      - name: Execute functional check
        run: |
          cd /opt/directord/share/directord/orchestrations
          sudo timeout 240 /opt/directord/bin/directord \
                                              orchestrate \
                                              {functional-tests-async-race.yaml,functional-tests-async-time.yaml,functional-tests-async.yaml,functional-tests-query.yaml,functional-tests-async-transfer.yaml} \
                                              --poll \
                                              --check
      - name: Generate log details
        run: |
          sudo journalctl -u directord-client -n 2000 &> /tmp/directord-client.log || true
          sudo journalctl -u directord-server -n 2000 &> /tmp/directord-server.log || true
          sudo /opt/directord/bin/directord manage --list-nodes &> /tmp/directord-nodes.log
          sudo /opt/directord/bin/directord manage --dump-cache &> /tmp/directord-cache.log
          sudo /opt/directord/bin/directord manage --export-jobs /tmp/directord-jobs-export.log
        if: failure()
      - name: Upload build Log artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: functional-realworld-test-logs
          path: /tmp/directord-*.log

  py_coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip tox
    - name: Test with coverage
      run: |
        tox -e coverage

  py_flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip tox
    - name: Lint with flake8
      run: |
        tox -e flake8
